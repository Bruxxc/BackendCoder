<div class="user-profile-container">
    <h2>USER PROFILE</h2>
    <div class="user-profile">

        <div class="user_info_headers">
            <h5>Username</h5>
            <h5>Email</h5>
            <h5>Firstname</h5>
            <h5>Lastname</h5>
            <h5>Role</h5>
            <h5>Identification</h5>
            <h5>Address</h5>
            <h5>Account Status</h5>
        </div>
        
        <div class="user_info">
            <p>{{username}}</p>
            <p>{{email}}</p>
            <p>{{firstname}}</p>
            <p>{{lastname}}</p>
            <p>{{role}}</p>
            {{#if hasIdentification}}
            <p class="doc_available check-identification">✓</p>
            {{else}}
            <p class="doc_unavalable check-identification">X</p>
            {{/if}}
            {{#if hasAddress}}
            <p class="doc_available check-address">✓</p>
            {{else}}
            <p class="doc_unavalable check-address">X</p>
            {{/if}}
            {{#if hasAccountStatus}}
            <p class="doc_available check-accountStatus">✓</p>
            {{else}}
            <p class="doc_unavalable check-accountStatus">X</p>
            {{/if}}
        </div>
    </div> 
    {{#if isAdmin}}
        <div>
            <a href="../../../views/admin/manage"><button>ADMIN MANAGER</button></a>
        </div>
    {{/if}}
    <div class="updocs-container">
        <h2>Subir Archivos</h2>
        <div class="updocs">
            <form action="/api/users/{{uid}}/documents" method="POST" enctype="multipart/form-data">
                <label for="fileType">Tipo de Archivo:</label>
                <select name="fileType" id="fileType">
                    <option value="profile">Profile Image</option>
                    <option value="product">Product Image</option>
                    <option value="document">Document</option>
                </select>
                <br>
                <div id="documentOptions" style="display: none;">
                    <label for="documentType">Tipo de Documento:</label>
                    <select name="documentType" id="documentType">
                        <option value="identification">Identification</option>
                        <option value="address">Address</option>
                        <option value="accountStatus">Account Status</option>
                    </select>
                </div>
                <br>
                <label for="file">Selecciona un archivo:</label>
                <input type="file" name="file" accept="image/*" id="fileInput" /> <!-- Inicialmente, acepta solo imágenes -->
                <br>
                <input class="upload_button" type="submit" value="Subir Archivo" />
            </form>
        </div>
    </div> 
</div>

<script>
    // Obtén los elementos select y el input de archivo
    const fileTypeSelect = document.getElementById('fileType');
    const documentOptionsDiv = document.getElementById('documentOptions');
    const fileInput = document.getElementById('fileInput');
    const uploadButton = document.querySelector(".upload_button");
    
    // Agrega un evento change al campo de selección
    fileTypeSelect.addEventListener('change', () => {
        const selectedFileType = fileTypeSelect.value;

        // Mostrar/ocultar el campo de selección de documento según la selección
        if (selectedFileType === 'document') {
            documentOptionsDiv.style.display = 'block';
            fileInput.accept = ''; // Acepta cualquier tipo de archivo
        } else {
            documentOptionsDiv.style.display = 'none';
            fileInput.accept = 'image/*'; // Acepta solo imágenes
        }
    });

    // Agregar un evento click al botón de carga
    uploadButton.addEventListener("click", (e) => {
        e.preventDefault();
    
        // Crear un objeto FormData para recopilar los datos del formulario
        const formData = new FormData();
        formData.append("fileType", fileTypeSelect.value);
       // Aquí asumimos que solo se selecciona un archivo

        if (fileTypeSelect.value === 'document') {
            const documentTypeSelect = document.getElementById('documentType');
            formData.append("documentType", documentTypeSelect.value);
        }
        formData.append("file", fileInput.files[0]);
        // Realizar una solicitud Fetch para enviar los datos al servidor
        fetch(`/api/users/{{uid}}/documents`, {
            method: "POST",
            body: formData
        })
        .then(response => response.json()) // Parsear la respuesta JSON (si la respuesta es JSON)
        .then(data => {
            // Manejar la respuesta del servidor aquí
            if(data.status=="success"){
                alert("Archivo subido exitosamente");
                const documentTypeSelect = document.getElementById('documentType');
                if(fileTypeSelect.value === 'document'){
                    if(documentTypeSelect.value==="identification"){
                        const check=document.querySelector(".check-identification");
                        check.innerText= "✓";
                    }
                    else if(documentTypeSelect.value==="address"){
                        const check=document.querySelector(".check-address");
                        check.innerText= "✓";
                    }
                    else{
                        const check=document.querySelector(".check-accountStatus");
                        check.innerText= "✓";
                    }
                }
            }
            else{
                alert("Error al subir el archivo");
            }
        })
        .catch(error => {
            // Manejar errores si ocurren
            console.error('Error:', error);
        });
    });
</script>